{"mappings":"qhBAgEA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAWC,SAASC,cAAc,UAClCC,EAAUF,SAASC,cAAc,QACjCE,EAAaH,SAASC,cAAc,mBACpCG,EAAYJ,SAASC,cAAc,kBACnCI,EAAcL,SAASC,cAAc,mBAC3C,IAAIK,EAAQ,KACRC,EAAO,KACPC,EAAS,KA8Cb,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,EAAUS,MAAAR,IAEpBM,EAAO,C,SAAEP,EAAUS,MAAAR,GAAQ,GAE5BA,EAAM,G,CAtDbT,EAAQkB,iBAAiB,SASvB,WACEd,GAASH,EAAWkB,MACpBC,QAAQC,IAAIjB,GACZC,GAAQH,EAAUiB,MAClBC,QAAQC,IAAIhB,GACZC,GAAUH,EAAYgB,MACtBC,QAAQC,IAAIf,E,IAdhBN,EAAQkB,iBAAiB,UAEzB,SAAwBI,GACtBA,EAAEC,iBAeJ,WAIE,IAAK,IAAIC,EAAI,EAAGA,GAAKlB,EAAQkB,GAAK,EAChCjB,EAAciB,EAAGpB,GACdqB,MAAK,EAACjB,SAAEA,EAAUS,MAAAS,MACjBC,EAAAhC,GAASiC,OAAOC,QACd,uBAAqBrB,QAAiBkB,MAAU,IAGnDI,OAAM,EAACtB,SAAEA,EAAUS,MAAAc,MAClBJ,EAAAhC,GAASiC,OAAOI,QACd,sBAAoBxB,QAAiBuB,MAAU,IAGrD3B,GAASC,EAGbW,YAAW,KACTnB,EAASoC,UAAW,CAAK,GACxB7B,GACHP,EAASoC,UAAW,C,CApClBC,E","sources":["src/js/03-promises.js"],"sourcesContent":["// import Notiflix from 'notiflix';\n\n// const inputRef = document.querySelector('form');\n// const inputDelay = document.querySelector('[ name=\"delay\"]');\n// const inputStep = document.querySelector('[ name=\"step\"]');\n// const inputAmount = document.querySelector('[name=\"amount\"]');\n// const btnStart = document.querySelector('[type=\"submit\"]');\n\n// let delay = null;\n// let step = null;\n// let amount = null;\n\n// inputRef.addEventListener('input', onFormInput);\n// inputRef.addEventListener('submit', preventDefault);\n// btnStart.addEventListener('click', onBtnStartClick);\n\n// function onFormInput() {\n//   delay = +inputDelay.value;\n//   console.log(delay);\n//   step = +inputStep.value;\n//   console.log(step);\n//   amount = +inputAmount.value;\n//   console.log(amount);\n// }\n\n// function preventDefault(e) {\n//   e.preventDefault();\n//   onBtnStartClick()\n// }\n\n// function onBtnStartClick() {\n//   btnStart.setAttribute('disabled', 'disabled')\n//   for (let i = 1; i <= amount; i += 1) {\n//     createPromise(i, delay)\n//       .then(({ position, delay }) => {\n//         Notiflix.Notify.success(\n//           `✅ Fulfilled promise ${position} in ${delay}ms`\n//         );\n//       })\n//       .catch(({ position, delay }) => {\n//         Notiflix.Notify.failure(\n//           `❌ Rejected promise ${position} in ${delay}ms`\n//         );\n//       });\n//     delay += step;\n//   }\n\n// }\n\n// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n\n//   return new Promise((resolve, reject) => {\n//     setTimeout(() => {\n//       if (shouldResolve) {\n//         resolve({ position, delay });\n//       } else {\n//         reject({ position, delay });\n//       }\n//     }, delay);\n//   });\n// }\n\n\nimport Notiflix from 'notiflix';\n\nconst btnStart = document.querySelector('button')\nconst formRef = document.querySelector('form')\nconst inputDelay = document.querySelector('[ name=\"delay\"]');\nconst inputStep = document.querySelector('[ name=\"step\"]');\nconst inputAmount = document.querySelector('[name=\"amount\"]');\nlet delay = null;\nlet step = null;\nlet amount = null;\n\nformRef.addEventListener('input', onFormInput);\nformRef.addEventListener('submit', preventDefault)\n\nfunction preventDefault(e) {\n  e.preventDefault();\n  onBtnStartClick()\n\n}\n\n  function onFormInput() {\n    delay = +inputDelay.value;\n    console.log(delay);\n    step = +inputStep.value;\n    console.log(step);\n    amount = +inputAmount.value;\n    console.log(amount);\n  }\n\n\nfunction onBtnStartClick() {\n\n\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    delay += step;\n  }\n  // блокування кнопки на час виведення промісів\nsetTimeout(() => {\n  btnStart.disabled = false\n}, delay);\nbtnStart.disabled = true\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$btnStart","document","querySelector","$47d4ff9957288465$var$formRef","$47d4ff9957288465$var$inputDelay","$47d4ff9957288465$var$inputStep","$47d4ff9957288465$var$inputAmount","$47d4ff9957288465$var$delay","$47d4ff9957288465$var$step","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$createPromise","position","delay3","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","delay","addEventListener","value","console","log","e","preventDefault","i","then","delay1","$parcel$interopDefault","Notify","success","catch","delay2","failure","disabled","$47d4ff9957288465$var$onBtnStartClick"],"version":3,"file":"03-promises.29ebce0a.js.map"}